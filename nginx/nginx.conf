# Обычные настройки сервера
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    server {
        listen       8081;
        server_name  localhost;
        error_log error.log;
        access_log access.log;

        location = /api/v1/ {
            return 301 http://localhost:8000/v1/swagger/index.html;
        }

        location /api/v1/ {
            proxy_pass http://localhost:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /legacy {
            root html; 
            try_files /legacy.html =404;
        }
 
        location /documentation/ {
            root html;
            try_files /readme.html =404;
        }

        location / {
            root html; 
            index index.html;
        }

        location /img/ {
            root html; 
            try_files $uri $uri/ =404;
        }

       location /admin {
            # Удаляем заголовок Authorization
            proxy_set_header Authorization "";

            # Настройки базовой аутентификации
            auth_basic "Restricted Area";
            auth_basic_user_file /etc/nginx/.htpasswd;

            # Перенаправление на ваш локальный сервер
            proxy_pass http://127.0.0.1:53190/?key=c3530c32-8361-4b58-b28b-2cfe6fde0c55;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Заголовки для отключения кеширования
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }


        location /status {
            stub_status on;
            # allow 192.168.32.1;
            allow 127.0.0.1;
            deny all;
        }

        location /test {
            return 301 /;
        }
    }
}
